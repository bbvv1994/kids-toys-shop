#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import psycopg2
import json
import os

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
def get_db_connection():
    return psycopg2.connect(
        host="localhost",
        database="kids_toys_db",
        user="kids_toys_user",
        password="3454746978"
    )

def check_product_images():
    conn = get_db_connection()
    cursor = conn.cursor()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 —Ç–æ–≤–∞—Ä–æ–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
        cursor.execute("""
            SELECT id, name, imageUrls 
            FROM "Product" 
            WHERE imageUrls IS NOT NULL AND array_length(imageUrls, 1) > 0
            LIMIT 5
        """)
        
        products = cursor.fetchall()
        
        print("üîç –ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
        print("=" * 50)
        
        cloudinary_count = 0
        local_count = 0
        
        for product in products:
            product_id, name, image_urls = product
            print(f"\nüì¶ –¢–æ–≤–∞—Ä ID: {product_id}")
            print(f"üìù –ù–∞–∑–≤–∞–Ω–∏–µ: {name}")
            print(f"üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ({len(image_urls)}):")
            
            for i, url in enumerate(image_urls):
                print(f"  {i+1}. {url}")
                
                if url.startswith('http') and 'cloudinary.com' in url:
                    cloudinary_count += 1
                    print(f"     ‚úÖ Cloudinary URL")
                elif url.startswith('/uploads/'):
                    local_count += 1
                    print(f"     üìÅ –õ–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª")
                else:
                    print(f"     ‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø URL")
        
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   - Cloudinary –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {cloudinary_count}")
        print(f"   - –õ–æ–∫–∞–ª—å–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {local_count}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        cursor.execute("""
            SELECT 
                COUNT(*) as total_products,
                COUNT(CASE WHEN imageUrls IS NOT NULL AND array_length(imageUrls, 1) > 0 THEN 1 END) as products_with_images
            FROM "Product"
        """)
        
        stats = cursor.fetchone()
        print(f"   - –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: {stats[0]}")
        print(f"   - –¢–æ–≤–∞—Ä–æ–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏: {stats[1]}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        cursor.close()
        conn.close()

if __name__ == '__main__':
    check_product_images()

