const cloudinary = require('cloudinary').v2;
require('dotenv').config();

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Cloudinary
cloudinary.config({
  cloud_name: process.env.CLOUDINARY_CLOUD_NAME,
  api_key: process.env.CLOUDINARY_API_KEY,
  api_secret: process.env.CLOUDINARY_API_SECRET
});

/**
 * –°–æ–∑–¥–∞–µ—Ç HD –≤–µ—Ä—Å–∏–∏ –¥–ª—è –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ Cloudinary
 */
async function createHdVersionsForAllImages() {
  try {
    console.log('üñºÔ∏è –ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ HD –≤–µ—Ä—Å–∏–π –¥–ª—è –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ Cloudinary...');
    console.log(`üîß Cloud name: ${process.env.CLOUDINARY_CLOUD_NAME}`);
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –ø–∞–ø–∫–µ kids-toys-shop
    const result = await cloudinary.api.resources({
      type: 'upload',
      prefix: 'kids-toys-shop/',
      max_results: 1000, // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ª–∏–º–∏—Ç
      resource_type: 'image'
    });
    
    console.log(`üìã –ù–∞–π–¥–µ–Ω–æ ${result.resources.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`);
    
    if (result.resources.length === 0) {
      console.log('‚ö†Ô∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Cloudinary.');
      return;
    }
    
    let successCount = 0;
    let errorCount = 0;
    let hdVersionsCreated = 0;
    
    for (const resource of result.resources) {
      try {
        console.log(`\nüîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: ${resource.public_id}`);
        console.log(`   URL: ${resource.secure_url}`);
        console.log(`   –§–æ—Ä–º–∞—Ç: ${resource.format}`);
        console.log(`   –†–∞–∑–º–µ—Ä: ${resource.width}x${resource.height}`);
        
        // –°–æ–∑–¥–∞–µ–º HD –≤–µ—Ä—Å–∏–∏ - —Ä–µ–∞–ª—å–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ–º –∏—Ö –≤ Cloudinary
        console.log(`   üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º HD @2x –≤–µ—Ä—Å–∏—é...`);
        const hd2xResult = await cloudinary.uploader.upload(
          cloudinary.url(resource.public_id, {
            transformation: [
              { width: 1200, height: 1200, crop: 'limit' },
              { quality: 'auto', fetch_format: 'auto' }
            ]
          }),
          {
            public_id: `${resource.public_id}_hd2x`,
            resource_type: 'image',
            overwrite: true
          }
        );
        
        console.log(`   üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º HD @4x –≤–µ—Ä—Å–∏—é...`);
        const hd4xResult = await cloudinary.uploader.upload(
          cloudinary.url(resource.public_id, {
            transformation: [
              { width: 2400, height: 2400, crop: 'limit' },
              { quality: 'auto', fetch_format: 'auto' }
            ]
          }),
          {
            public_id: `${resource.public_id}_hd4x`,
            resource_type: 'image',
            overwrite: true
          }
        );
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ HD –≤–µ—Ä—Å–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
        console.log(`‚úÖ HD –≤–µ—Ä—Å–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –¥–ª—è ${resource.public_id}:`);
        console.log(`   HD @2x: ${hd2xResult.secure_url}`);
        console.log(`   HD @4x: ${hd4xResult.secure_url}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å HD –≤–µ—Ä—Å–∏–π
        try {
          const hd2xResponse = await fetch(hd2xResult.secure_url);
          const hd4xResponse = await fetch(hd4xResult.secure_url);
          
          if (hd2xResponse.ok && hd4xResponse.ok) {
            console.log(`   ‚úÖ HD –≤–µ—Ä—Å–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –∏ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è`);
            hdVersionsCreated += 2;
          } else {
            console.log(`   ‚ö†Ô∏è HD –≤–µ—Ä—Å–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –Ω–æ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã`);
          }
        } catch (fetchError) {
          console.log(`   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å HD –≤–µ—Ä—Å–∏–π: ${fetchError.message}`);
        }
        
        successCount++;
        
        // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∂–∞—Ç—å Cloudinary API
        await new Promise(resolve => setTimeout(resolve, 200));
        
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ HD –≤–µ—Ä—Å–∏–π –¥–ª—è ${resource.public_id}:`, error.message);
        errorCount++;
      }
    }
    
    console.log('\nüéØ –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:');
    console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${successCount}`);
    console.log(`‚ùå –û—à–∏–±–∫–∏: ${errorCount}`);
    console.log(`üìä –í—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${result.resources.length}`);
    console.log(`üñºÔ∏è HD –≤–µ—Ä—Å–∏–π —Å–æ–∑–¥–∞–Ω–æ: ${hdVersionsCreated}`);
    
    if (hdVersionsCreated > 0) {
      console.log('\nüéâ HD –≤–µ—Ä—Å–∏–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã! –¢–µ–ø–µ—Ä—å –ª—É–ø–∞ –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –≤—ã—Å–æ–∫–∏–º –∫–∞—á–µ—Å—Ç–≤–æ–º.');
    } else {
      console.log('\n‚ö†Ô∏è HD –≤–µ—Ä—Å–∏–∏ –Ω–µ –±—ã–ª–∏ —Å–æ–∑–¥–∞–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Cloudinary.');
    }
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
    console.error('–°—Ç–µ–∫ –æ—à–∏–±–∫–∏:', error.stack);
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Cloudinary
 */
async function checkCloudinaryConfig() {
  try {
    console.log('üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Cloudinary...');
    
    if (!process.env.CLOUDINARY_CLOUD_NAME) {
      throw new Error('CLOUDINARY_CLOUD_NAME –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    }
    if (!process.env.CLOUDINARY_API_KEY) {
      throw new Error('CLOUDINARY_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    }
    if (!process.env.CLOUDINARY_API_SECRET) {
      throw new Error('CLOUDINARY_API_SECRET –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    }
    
    console.log('‚úÖ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Cloudinary
    const result = await cloudinary.api.ping();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Cloudinary —É—Å–ø–µ—à–Ω–æ');
    
    return true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Cloudinary:', error.message);
    return false;
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è HD –≤–µ—Ä—Å–∏–π...');
  
  const configOk = await checkCloudinaryConfig();
  if (!configOk) {
    console.error('‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Cloudinary –Ω–µ–≤–µ—Ä–Ω—ã. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã.');
    process.exit(1);
  }
  
  await createHdVersionsForAllImages();
  
  console.log('\nüèÅ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω.');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
main().catch(error => {
  console.error('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
});
