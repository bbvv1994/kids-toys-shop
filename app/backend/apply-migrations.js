const https = require('https');

console.log('üîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...\n');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP –∑–∞–ø—Ä–æ—Å–∞
function makeRequest(url, method = 'POST') {
  return new Promise((resolve, reject) => {
    const req = https.request(url, { method }, (res) => {
      let data = '';
      res.on('data', (chunk) => data += chunk);
      res.on('end', () => {
        try {
          const jsonData = JSON.parse(data);
          resolve({ statusCode: res.statusCode, data: jsonData });
        } catch (error) {
          resolve({ statusCode: res.statusCode, data: data });
        }
      });
    });
    
    req.on('error', reject);
    req.setTimeout(120000, () => { // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏
      req.destroy();
      reject(new Error('–¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞'));
    });
    
    req.end();
  });
}

async function applySafeMigration() {
  try {
    console.log('üìã –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞...');
    const healthCheck = await makeRequest('https://kids-toys-backend.onrender.com/api/health', 'GET');
    console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç (—Å—Ç–∞—Ç—É—Å: ${healthCheck.statusCode})`);

    console.log('\nüìã –®–∞–≥ 2: –ó–∞–ø—É—Å–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏...');
    console.log('‚ö†Ô∏è –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç...');
    const migrateResult = await makeRequest('https://kids-toys-backend.onrender.com/api/migrate', 'POST');
    
    if (migrateResult.statusCode === 200 && migrateResult.data.success) {
      console.log('‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
      console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:', migrateResult.data.message);
      console.log('üìã –î–µ—Ç–∞–ª–∏:', migrateResult.data.details);
    } else {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏: ${migrateResult.statusCode}`);
      console.log('üìä –û—Ç–≤–µ—Ç:', migrateResult.data);
      
      if (migrateResult.data && migrateResult.data.error) {
        console.log('‚ùå –û—à–∏–±–∫–∞:', migrateResult.data.error);
      }
    }

    console.log('\nüìã –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –ø–µ—Ä–µ–≤–æ–¥–æ–≤...');
    const productsCheck = await makeRequest('https://kids-toys-backend.onrender.com/api/products?limit=1', 'GET');
    if (productsCheck.statusCode === 200) {
      console.log('‚úÖ API —Ç–æ–≤–∞—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—è –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –≤ –æ—Ç–≤–µ—Ç–µ
      if (productsCheck.data && productsCheck.data.length > 0) {
        const product = productsCheck.data[0];
        if (product.nameHe !== undefined || product.descriptionHe !== undefined) {
          console.log('‚úÖ –ü–æ–ª—è –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ API');
        } else {
          console.log('‚ö†Ô∏è –ü–æ–ª—è –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –æ—Ç–≤–µ—Ç–µ API');
        }
      }
    } else {
      console.log(`‚ùå API —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: ${productsCheck.statusCode}`);
    }

    console.log('\nüéâ –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É —Å–∏—Å—Ç–µ–º—ã –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –Ω–∞ —Å–∞–π—Ç–µ');
    console.log('2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ —Å –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏');
    console.log('3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–∞–¥–ø–∏—Å–∏ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã –Ω–∞ –∏–≤—Ä–∏—Ç');
    console.log('4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ Render –¥–ª—è –¥–µ—Ç–∞–ª–µ–π');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏:', error.message);
    console.log('\nüîó –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã:');
    console.log('1. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ —Å–µ—Ä–≤–µ—Ä—É —á–µ—Ä–µ–∑ –≤–µ–±-–∫–æ–Ω—Å–æ–ª—å Render');
    console.log('2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–µ–∑–æ–ø–∞—Å–Ω—É—é –º–∏–≥—Ä–∞—Ü–∏—é –≤—Ä—É—á–Ω—É—é:');
    console.log('   - node safe-migration.js');
    console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ —Ñ–∞–π–ª–µ migration-log.txt');
    console.log('4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏');
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—É—é –º–∏–≥—Ä–∞—Ü–∏—é
applySafeMigration(); 