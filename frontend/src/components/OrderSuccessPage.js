import React from 'react';
import { API_BASE_URL } from '../config';
import {
  Container, Typography, Box, Paper, Button, 
  Divider, Grid, Chip
} from '@mui/material';
import CheckCircleIcon from '@mui/icons-material/CheckCircle';
import EmojiEventsIcon from '@mui/icons-material/EmojiEvents';
import { useLocation, useNavigate } from 'react-router-dom';

export default function OrderSuccessPage() {
  const location = useLocation();
  const navigate = useNavigate();
  const { orderNumber, orderData } = location.state || {};

  if (!orderNumber) {
    return (
      <Container maxWidth="md" sx={{ mt: 4 }}>
        <Typography variant="h4" color="error">
          –û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
        </Typography>
        <Button onClick={() => navigate('/')} sx={{ mt: 2 }}>
          –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
        </Button>
      </Container>
    );
  }

  const getStatusLabel = (status) => {
    switch (status) {
      case 'pending':
        return '–û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è';
      case 'confirmed':
        return '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω';
      case 'ready':
        return '–ì–æ—Ç–æ–≤ –∫ –≤—ã–¥–∞—á–µ';
      case 'pickedup':
        return '–ü–æ–ª—É—á–µ–Ω';
      case 'cancelled':
        return '–û—Ç–º–µ–Ω–µ–Ω';
      default:
        return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å';
    }
  };

  const getStatusColor = (status) => {
    switch (status) {
      case 'pending':
        return 'warning';
      case 'confirmed':
        return 'info';
      case 'ready':
        return 'primary';
      case 'pickedup':
        return 'success';
      case 'cancelled':
        return 'error';
      default:
        return 'default';
    }
  };

  const total = orderData?.total || 0;

  return (
    <Container maxWidth="md" sx={{ mt: 4, mb: 4 }}>
      <Box sx={{ textAlign: 'center', mb: 4 }}>
        <CheckCircleIcon sx={{ fontSize: 80, color: 'success.main', mb: 2 }} />
        <Typography variant="h4" color="success.main" gutterBottom>
          –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω!
        </Typography>
        <Typography variant="h6" color="text.secondary">
          –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: {orderNumber}
        </Typography>
        <Typography variant="body1" sx={{ mt: 2 }}>
          <strong>–°–∞–º–æ–≤—ã–≤–æ–∑ –∏–∑:</strong> {orderData?.pickupStore === 'store1' ? '◊®◊ï◊ë◊®◊ò ◊°◊ï◊ú◊ì 8 ◊ß◊®◊ô◊ô◊™ ◊ô◊ù' : orderData?.pickupStore === 'store2' ? '◊ï◊ô◊¶◊û◊ü 6 ◊ß◊®◊ô◊ô◊™ ◊û◊ï◊¶◊ß◊ô◊ü' : '–ù–µ –≤—ã–±—Ä–∞–Ω'}
        </Typography>
        <Typography variant="body1" sx={{ mt: 2 }}>
          –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –∑–∞–∫–∞–∑! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.
        </Typography>
      </Box>

      <Grid container spacing={3}>
        <Grid gridColumn="span 12" md="span 6">
          <Paper sx={{ p: 3, background: 'linear-gradient(135deg, #E8F5E8 0%, #F1F8E9 100%)' }}>
            <Typography variant="h6" sx={{ mb: 2, color: '#2E7D32', fontWeight: 'bold' }}>
              üì¶ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ
            </Typography>
            <Box sx={{ mb: 2 }}>
              <Typography variant="body2" color="text.secondary">–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:</Typography>
              <Typography variant="h6" sx={{ fontWeight: 'bold', color: '#2E7D32' }}>
                #{orderNumber}
              </Typography>
            </Box>
            <Box sx={{ mb: 2 }}>
              <Typography variant="body2" color="text.secondary">–°—Ç–∞—Ç—É—Å:</Typography>
              <Chip 
                label={getStatusLabel('pending')} 
                color={getStatusColor('pending')}
                sx={{ fontWeight: 'bold' }}
              />
            </Box>
            <Box sx={{ mb: 2 }}>
              <Typography variant="body2" color="text.secondary">–î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞:</Typography>
              <Typography variant="body1" sx={{ fontWeight: 'medium' }}>
                {new Date(orderData?.createdAt).toLocaleDateString('ru-RU', {
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric',
                  hour: '2-digit',
                  minute: '2-digit'
                })}
              </Typography>
            </Box>
          </Paper>
        </Grid>
        <Grid gridColumn="span 12" md="span 6">
          <Paper sx={{ p: 3, background: 'linear-gradient(135deg, #FFF3E0 0%, #FFE0B2 100%)' }}>
            <Typography variant="h6" sx={{ mb: 2, color: '#E65100', fontWeight: 'bold' }}>
              üí∞ –ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞
            </Typography>
            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>
              <Typography variant="h5" sx={{ fontWeight: 'bold', color: '#E65100' }}>
                {total} ‚Ç™
              </Typography>
              <EmojiEventsIcon sx={{ fontSize: 40, color: '#FF9800' }} />
            </Box>
            <Typography variant="body2" color="text.secondary">
              –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –∑–∞–∫–∞–∑! –ú—ã —É–≤–µ–¥–æ–º–∏–º –≤–∞—Å –æ —Å—Ç–∞—Ç—É—Å–µ –¥–æ—Å—Ç–∞–≤–∫–∏.
            </Typography>
          </Paper>
        </Grid>
      </Grid>

      <Paper sx={{ p: 3, mt: 3, background: 'white' }}>
        <Typography variant="h6" sx={{ mb: 3, color: '#333', fontWeight: 'bold' }}>
          üõí –¢–æ–≤–∞—Ä—ã –≤ –∑–∞–∫–∞–∑–µ
        </Typography>
        {orderData?.items?.map((item, index) => (
          <Box key={index} sx={{ 
            display: 'flex', 
            alignItems: 'center', 
            p: 2, 
            mb: 2, 
            border: '1px solid #e0e0e0', 
            borderRadius: 2,
            background: '#fafafa'
          }}>
            <img
              src={item.product.imageUrls && item.product.imageUrls.length > 0 
                ? `${API_BASE_URL}${item.product.imageUrls[0]}` 
                : '/toys.png'}
              alt={item.product.name}
              style={{ 
                width: 60, 
                height: 60, 
                objectFit: 'cover', 
                borderRadius: 8,
                marginRight: 16
              }}
            />
            <Box sx={{ flexGrow: 1 }}>
              <Typography variant="h6" sx={{ mb: 1 }}>
                {item.product.name}
              </Typography>
              <Typography variant="body2" color="text.secondary">
                –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {item.quantity} √ó ‚Ç™{item.product.price}
              </Typography>
            </Box>
            <Typography variant="h6" sx={{ fontWeight: 'bold', color: '#4CAF50' }}>
              ‚Ç™{(item.product.price * item.quantity).toFixed(2)}
            </Typography>
          </Box>
        ))}
        
        <Divider sx={{ my: 3 }} />
        
        <Grid container alignItems="center" spacing={2}>
          <Grid gridColumn="span 8">
            <Typography variant="h6" sx={{ fontWeight: 'bold' }}>
              –ò—Ç–æ–≥–æ:
            </Typography>
          </Grid>
          <Grid gridColumn="span 4" sx={{ textAlign: 'right' }}>
            <Typography variant="h5" sx={{ fontWeight: 'bold', color: '#4CAF50' }}>
              ‚Ç™{total}
            </Typography>
          </Grid>
        </Grid>
      </Paper>

      <Box sx={{ textAlign: 'center' }}>
        <Typography variant="body1" sx={{ mb: 3 }}>
          –ú—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –Ω–∞ –≤–∞—à email.
          –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.
        </Typography>
        
        <Box sx={{ display: 'flex', gap: 2, justifyContent: 'center', flexWrap: 'wrap' }}>
          <Button 
            variant="contained" 
            onClick={() => navigate('/catalog')}
          >
            –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∫—É–ø–∫–∏
          </Button>
          <Button 
            variant="outlined" 
            onClick={() => navigate('/profile')}
          >
            –ú–æ–∏ –∑–∞–∫–∞–∑—ã
          </Button>
          <Button 
            variant="outlined" 
            onClick={() => navigate('/')}
          >
            –ù–∞ –≥–ª–∞–≤–Ω—É—é
          </Button>
        </Box>
      </Box>
    </Container>
  );
} 