// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ä–µ–¥—ã
const config = {
  development: {
    API_BASE_URL: process.env.REACT_APP_API_BASE_URL || 'http://192.168.31.103:5001',
    FRONTEND_URL: process.env.REACT_APP_FRONTEND_URL || 'http://192.168.31.103:3000'
  },
  production: {
    API_BASE_URL: process.env.REACT_APP_API_BASE_URL || 'https://kids-toys-backend.onrender.com',
    FRONTEND_URL: process.env.REACT_APP_FRONTEND_URL || (typeof window !== 'undefined' ? window.location.origin : 'https://kids-toys-shop.vercel.app')
  }
};

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ä–µ–¥—ã
const getEnvironment = () => {
  console.log('üîß –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ä–µ–¥—ã...');
  console.log('NODE_ENV:', process.env.NODE_ENV);
  console.log('REACT_APP_API_BASE_URL:', process.env.REACT_APP_API_BASE_URL);
  console.log('window.location.hostname:', typeof window !== 'undefined' ? window.location.hostname : 'undefined');
  
  // –ï—Å–ª–∏ –µ—Å—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è NODE_ENV
  if (process.env.NODE_ENV) {
    console.log('‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º NODE_ENV:', process.env.NODE_ENV);
    return process.env.NODE_ENV;
  }
  
  // –ï—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ localhost - development
  if (typeof window !== 'undefined' && window.location.hostname === 'localhost') {
    console.log('‚úÖ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–æ –∫–∞–∫ development (localhost)');
    return 'development';
  }
  
  // –ï—Å–ª–∏ –µ—Å—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è production
  if (process.env.REACT_APP_API_BASE_URL || process.env.REACT_APP_FRONTEND_URL) {
    console.log('‚úÖ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–æ –∫–∞–∫ production (–µ—Å—Ç—å env –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ)');
    return 'production';
  }
  
  // –ï—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ Vercel –∏–ª–∏ Netlify - production
  if (typeof window !== 'undefined' && (window.location.hostname.includes('vercel.app') || window.location.hostname.includes('netlify.app'))) {
    console.log('‚úÖ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–æ –∫–∞–∫ production (Vercel/Netlify)');
    return 'production';
  }
  
  // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - development
  console.log('‚ö†Ô∏è –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ–º development');
  return 'development';
};

const environment = getEnvironment();

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ä–µ–¥—ã
export const API_BASE_URL = config[environment].API_BASE_URL;
export const FRONTEND_URL = config[environment].FRONTEND_URL;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ URL API
export const getApiUrl = (endpoint) => {
  const cleanEndpoint = endpoint.startsWith('/') ? endpoint : `/${endpoint}`;
  return `${API_BASE_URL}/api${cleanEndpoint}`;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è URL –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
export const getUploadUrl = (filename) => {
  if (!filename) return '';
  return `${API_BASE_URL}/uploads/${filename}`;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
export const getImageUrl = (imagePath) => {
  console.log('üîß getImageUrl called with:', imagePath);
  
  if (!imagePath) {
    console.log('‚ùå No imagePath provided');
    return '';
  }
  
  // –ï—Å–ª–∏ —ç—Ç–æ —É–∂–µ –ø–æ–ª–Ω—ã–π URL
  if (imagePath.startsWith('http')) {
    console.log('‚úÖ Full URL detected:', imagePath);
    return imagePath;
  }
  
  // –ï—Å–ª–∏ —ç—Ç–æ –ø—É—Ç—å /uploads/...
  if (imagePath.startsWith('/uploads/')) {
    const url = `${API_BASE_URL}${imagePath}`;
    console.log('‚úÖ Uploads path detected:', url);
    return url;
  }
  
  // –ï—Å–ª–∏ —ç—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å —Ü–∏—Ñ—Ä)
  if (/^\d+/.test(imagePath)) {
    const url = getUploadUrl(imagePath);
    console.log('‚úÖ Uploaded file detected:', url);
    return url;
  }
  
  // –ï—Å–ª–∏ —ç—Ç–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —Ñ–∞–π–ª –∏–∑ public –ø–∞–ø–∫–∏ (PNG, JPG, etc.)
  if (imagePath.match(/\.(png|jpg|jpeg|gif|webp)$/i)) {
    const url = `${API_BASE_URL}/public/${imagePath}`;
    console.log('‚úÖ Static file detected:', url);
    return url;
  }
  
  // –ï—Å–ª–∏ —ç—Ç–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —Ñ–∞–π–ª
  if (imagePath.startsWith('/')) {
    console.log('‚úÖ Static path detected:', imagePath);
    return imagePath;
  }
  
  // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—á–∏—Ç–∞–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º —Ñ–∞–π–ª–æ–º
  const url = getUploadUrl(imagePath);
  console.log('‚úÖ Default upload file:', url);
  return url;
};

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –≤ –∫–∞–∫–æ–π —Å—Ä–µ–¥–µ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º
const isDevelopment = process.env.NODE_ENV === 'development' || 
                     window.location.hostname === 'localhost' || 
                     window.location.hostname === '127.0.0.1';

// –ë–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
const isProduction = !isDevelopment || 
                    window.location.hostname.includes('vercel.app') ||
                    window.location.hostname.includes('netlify.app') ||
                    window.location.hostname.includes('render.com') ||
                    window.location.hostname.includes('herokuapp.com') ||
                    process.env.NODE_ENV === 'production';

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ä–µ–¥—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
export { isDevelopment, isProduction };

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è HD-–≤–µ—Ä—Å–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —ç–∫—Ä–∞–Ω–Ω–æ–π –ª—É–ø—ã
export const getHdImageUrl = (imagePath, quality = '2x') => {
  console.log('üîß getHdImageUrl called with:', imagePath, 'quality:', quality);
  console.log('üîß Environment:', isDevelopment ? 'LOCAL' : 'PRODUCTION');
  console.log('üîß isProduction:', isProduction);
  console.log('üîß API_BASE_URL:', API_BASE_URL);
  console.log('üîß window.location.hostname:', typeof window !== 'undefined' ? window.location.hostname : 'undefined');
  console.log('üîß NODE_ENV:', process.env.NODE_ENV);
  
  if (!imagePath) {
    console.log('‚ùå No imagePath provided for HD');
    return '';
  }
  
  // –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è HD –≤–µ—Ä—Å–∏–µ–π, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ –∫–∞–∫ –µ—Å—Ç—å
  if (imagePath.includes('@') && (imagePath.includes('@2x') || imagePath.includes('@4x'))) {
    console.log('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è HD –≤–µ—Ä—Å–∏–µ–π:', imagePath);
    return imagePath;
  }
  
  // –í –ª–æ–∫–∞–ª—å–Ω–æ–π —Å—Ä–µ–¥–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É HD
  if (isDevelopment) {
    // –ï—Å–ª–∏ —ç—Ç–æ –ª–æ–∫–∞–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, —Å–æ–∑–¥–∞–µ–º HD-URL
      if ((imagePath.startsWith('/uploads/') || imagePath.includes('/uploads/')) && !imagePath.includes('@')) {
    console.log(`üîß –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:`, imagePath);
    
    // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –∏–∑ –ø—É—Ç–∏
    let filename;
    if (imagePath.startsWith('/uploads/')) {
      filename = imagePath.split('/').pop(); // –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞
      console.log(`üîß –ò–∑–≤–ª–µ—á–µ–Ω–æ –∏–º—è —Ñ–∞–π–ª–∞ (–æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å):`, filename);
    } else {
      // –ï—Å–ª–∏ —ç—Ç–æ –ø–æ–ª–Ω—ã–π URL, –∏–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞
      const urlParts = imagePath.split('/');
      const uploadsIndex = urlParts.findIndex(part => part === 'uploads');
      console.log(`üîß URL —á–∞—Å—Ç–∏:`, urlParts);
      console.log(`üîß –ò–Ω–¥–µ–∫—Å uploads:`, uploadsIndex);
      if (uploadsIndex !== -1 && urlParts[uploadsIndex + 1]) {
        filename = urlParts[uploadsIndex + 1];
        console.log(`üîß –ò–∑–≤–ª–µ—á–µ–Ω–æ –∏–º—è —Ñ–∞–π–ª–∞ (–ø–æ–ª–Ω—ã–π URL):`, filename);
      }
    }
      
      if (filename) {
        const baseFilename = filename.replace(/\.[^/.]+$/, ''); // –£–±–∏—Ä–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
        
        // –°–æ–∑–¥–∞–µ–º HD-–≤–µ—Ä—Å–∏—é —Å –ø–æ–ª–Ω—ã–º URL
        const hdFilename = quality === '4x' ? `${baseFilename}@4x.webp` : `${baseFilename}@2x.webp`;
        const hdUrl = `${API_BASE_URL}/uploads/hd/${hdFilename}`;
        
        console.log(`üîß –õ–æ–∫–∞–ª—å–Ω–∞—è HD ${quality} –≤–µ—Ä—Å–∏—è:`, hdUrl);
        console.log(`üîß –ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª:`, filename);
        console.log(`üîß –ë–∞–∑–æ–≤–æ–µ –∏–º—è:`, baseFilename);
        console.log(`üîß HD –∏–º—è —Ñ–∞–π–ª–∞:`, hdFilename);
        return hdUrl;
      }
    }
    
    // –î–ª—è –¥—Ä—É–≥–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å—Ä–µ–¥–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª
    console.log('‚úÖ –õ–æ–∫–∞–ª—å–Ω–∞—è —Å—Ä–µ–¥–∞: –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ');
    return imagePath;
  }
  
  // –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º Cloudinary –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º HD –≤–µ—Ä—Å–∏–∏
  if (isProduction) {
    // –ï—Å–ª–∏ —ç—Ç–æ Cloudinary URL
    if (imagePath.includes('cloudinary.com')) {
      try {
        // –ò–∑–≤–ª–µ–∫–∞–µ–º publicId –∏–∑ URL Cloudinary
        const urlParts = imagePath.split('/');
        const uploadIndex = urlParts.findIndex(part => part === 'upload');
        
        if (uploadIndex !== -1 && urlParts[uploadIndex + 2]) {
          // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –≤–µ—Ä—Å–∏—é –∏ –±–µ—Ä–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
          const publicId = urlParts.slice(uploadIndex + 2).join('/').split('.')[0];
          
          // –°–æ–∑–¥–∞–µ–º HD-–≤–µ—Ä—Å–∏—é —Å –ø–æ–º–æ—â—å—é Cloudinary transformations
          const hdUrl = imagePath.replace(
            /\/upload\/([^\/]+)\//,
            `/upload/c_scale,w_${quality === '4x' ? '2400' : '1200'},h_${quality === '4x' ? '2400' : '1200'},c_limit,q_auto,f_auto/`
          );
          
          console.log(`‚úÖ Cloudinary HD ${quality} URL created:`, hdUrl);
          return hdUrl;
        }
      } catch (error) {
        console.warn('‚ö†Ô∏è Failed to create Cloudinary HD URL, using original:', error.message);
      }
    }
    
    // –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ Cloudinary, –Ω–æ –º—ã –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ, —Å–æ–∑–¥–∞–µ–º HD –≤–µ—Ä—Å–∏—é —á–µ—Ä–µ–∑ API
    // –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º —Ä–∞–∑–º–µ—Ä–æ–º
    console.log('üîß –ü—Ä–æ–¥–∞–∫—à–µ–Ω: —Å–æ–∑–¥–∞–µ–º HD –≤–µ—Ä—Å–∏—é —á–µ—Ä–µ–∑ API –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª');
    
    // –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å HD –≤–µ—Ä—Å–∏—é —á–µ—Ä–µ–∑ API endpoint
    if (imagePath.startsWith('/uploads/') || imagePath.includes('/uploads/')) {
      // –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π endpoint –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è HD –≤–µ—Ä—Å–∏–π
      const hdUrl = imagePath.replace(
        /\.(webp|jpg|jpeg|png)$/i,
        `@${quality}.webp`
      );
      console.log(`üîß –ü—Ä–æ–¥–∞–∫—à–µ–Ω HD ${quality} –≤–µ—Ä—Å–∏—è:`, hdUrl);
      
      // –¢–∞–∫–∂–µ –º–æ–∂–µ–º –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π API endpoint –¥–ª—è HD –≤–µ—Ä—Å–∏–π
      if (API_BASE_URL && !API_BASE_URL.includes('localhost')) {
        const apiHdUrl = `${API_BASE_URL}/api/images/hd/${encodeURIComponent(imagePath)}?quality=${quality}`;
        console.log(`üîß –ü—Ä–æ–¥–∞–∫—à–µ–Ω API HD URL:`, apiHdUrl);
        return apiHdUrl;
      }
      
      // –ï—Å–ª–∏ API endpoint –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å HD –≤–µ—Ä—Å–∏—é –ª–æ–∫–∞–ª—å–Ω–æ
      // –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª —Å CSS zoom
      console.log('üîß –ü—Ä–æ–¥–∞–∫—à–µ–Ω: –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback HD –≤–µ—Ä—Å–∏—é');
      return hdUrl;
      
      return hdUrl;
    }
  }
  
  // Fallback –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª
  console.log('‚úÖ Using original image for HD');
  
  // –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å HD –≤–µ—Ä—Å–∏—é, 
  // –º–æ–∂–µ–º –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —É–≤–µ–ª–∏—á–∏—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª —á–µ—Ä–µ–∑ CSS transform
  if (isProduction && !imagePath.includes('@')) {
    console.log('üîß –ü—Ä–æ–¥–∞–∫—à–µ–Ω: –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é CSS zoom');
    return imagePath;
  }
  
  return imagePath;
};

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–π —Å—Ä–µ–¥–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
export const ENV_INFO = {
  environment,
  API_BASE_URL,
  FRONTEND_URL,
  isDevelopment,
  isProduction
}; 