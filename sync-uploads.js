const fs = require('fs');
const path = require('path');

function syncUploads() {
  const sourceDir = path.join(__dirname, 'backend', 'uploads');
  const targetDir = path.join(__dirname, 'uploads');
  
  console.log('üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø–∞–ø–æ–∫ uploads...');
  console.log('üìÅ –ò—Å—Ç–æ—á–Ω–∏–∫:', sourceDir);
  console.log('üìÅ –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:', targetDir);
  
  try {
    // –°–æ–∑–¥–∞–µ–º —Ü–µ–ª–µ–≤—É—é –ø–∞–ø–∫—É, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    if (!fs.existsSync(targetDir)) {
      fs.mkdirSync(targetDir, { recursive: true });
      console.log('‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ uploads');
    }
    
    // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª—ã –∏–∑ backend/uploads
    const files = fs.readdirSync(sourceDir);
    console.log(`üìã –ù–∞–π–¥–µ–Ω–æ ${files.length} —Ñ–∞–π–ª–æ–≤ –≤ backend/uploads`);
    
    let copiedCount = 0;
    let skippedCount = 0;
    
    for (const file of files) {
      if (file === 'hd' || fs.statSync(path.join(sourceDir, file)).isDirectory()) {
        console.log(`‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–∞–ø–∫—É: ${file}`);
        continue;
      }
      
      const sourcePath = path.join(sourceDir, file);
      const targetPath = path.join(targetDir, file);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª –≤ —Ü–µ–ª–µ–≤–æ–π –ø–∞–ø–∫–µ
      if (!fs.existsSync(targetPath)) {
        try {
          fs.copyFileSync(sourcePath, targetPath);
          console.log(`‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω: ${file}`);
          copiedCount++;
        } catch (error) {
          console.log(`‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è ${file}:`, error.message);
        }
      } else {
        console.log(`‚è≠Ô∏è –£–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${file}`);
        skippedCount++;
      }
    }
    
    console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç:`);
    console.log(`   –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ: ${copiedCount}`);
    console.log(`   –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${skippedCount}`);
    console.log(`   –í—Å–µ–≥–æ: ${files.length}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', error.message);
  }
}

syncUploads();
