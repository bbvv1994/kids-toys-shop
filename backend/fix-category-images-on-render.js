const { PrismaClient } = require('@prisma/client');
require('dotenv').config();

const prisma = new PrismaClient();

// –ú–∞–ø–ø–∏–Ω–≥ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ fallback –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
const categoryImageMapping = {
  '–ù–∞—Å—Ç–æ–ª—å–Ω—ã–µ –∏–≥—Ä—ã': 'nastolka.png',
  '–†–∏—Å–æ–≤–∞–Ω–∏–µ': 'creativity.png',
  '–ù–∞–±–æ—Ä—ã –¥–ª—è —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞': 'creativity.png',
  '–†–∞—Å–∫—Ä–∞—Å–∫–∏': 'creativity.png',
  '–ö—É–∫–ª—ã': 'toys.png',
  '–ú—è–≥–∫–∏–µ –∏–≥—Ä—É—à–∫–∏': 'toys.png',
  '–ê–∫—Ç–∏–≤–Ω—ã–µ –∏–≥—Ä—ã': 'sport.png',
  '–î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–∞—è –∫–æ—Å–º–µ—Ç–∏–∫–∞ –∏ —É–∫—Ä–∞—à–µ–Ω–∏—è': 'toys.png',
  '–†–æ–±–æ—Ç—ã –∏ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–µ—Ä—ã': 'toys.png',
  '–ò–≥—Ä—É—à–∫–∏ –Ω–∞ —Ä–∞–¥–∏–æ—É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏': 'toys.png'
};

async function fixCategoryImagesOnRender() {
  try {
    console.log('üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–∞ Render...');

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const categories = await prisma.category.findMany({
      select: {
        id: true,
        name: true,
        image: true
      }
    });

    console.log(`üìã –ù–∞–π–¥–µ–Ω–æ ${categories.length} –∫–∞—Ç–µ–≥–æ—Ä–∏–π`);

    let updatedCount = 0;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    for (const category of categories) {
      let needsUpdate = false;
      let newImage = category.image;

      // –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å —Ü–∏—Ñ—Ä (–∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª), –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ fallback
      if (category.image && /^\d+/.test(category.image)) {
        console.log(`‚ùå –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${category.image} –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${category.name}"`);
        needsUpdate = true;
        newImage = categoryImageMapping[category.name] || 'toys.png';
      }

      // –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –º–∞–ø–ø–∏–Ω–≥—É, –∏—Å–ø—Ä–∞–≤–ª—è–µ–º
      if (categoryImageMapping[category.name] && category.image !== categoryImageMapping[category.name]) {
        console.log(`üîÑ –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è "${category.name}": ${category.image} -> ${categoryImageMapping[category.name]}`);
        needsUpdate = true;
        newImage = categoryImageMapping[category.name];
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
      if (needsUpdate) {
        await prisma.category.update({
          where: { id: category.id },
          data: { image: newImage }
        });
        console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è "${category.name}": ${newImage}`);
        updatedCount++;
      }
    }

    console.log(`üéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ ${updatedCount} –∫–∞—Ç–µ–≥–æ—Ä–∏–π!`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

fixCategoryImagesOnRender(); 