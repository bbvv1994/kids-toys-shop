const fs = require('fs');
const path = require('path');
const https = require('https');
const http = require('http');

console.log('üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞ —á–µ—Ä–µ–∑ API...\n');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const SERVER_URL = process.env.SERVER_URL || 'https://kids-toys-backend.onrender.com';
const API_ENDPOINT = '/api/export-data';
const OUTPUT_FILE = path.join(__dirname, '..', 'server-export.json');
const BACKUP_FILE = path.join(__dirname, '..', `server-backup-${new Date().toISOString().split('T')[0]}.json`);

async function downloadData() {
  return new Promise((resolve, reject) => {
    const url = `${SERVER_URL}${API_ENDPOINT}`;
    console.log(`üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫: ${url}`);
    
    const protocol = url.startsWith('https:') ? https : http;
    
    const req = protocol.get(url, (res) => {
      console.log(`üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${res.statusCode}`);
      
      if (res.statusCode !== 200) {
        reject(new Error(`HTTP ${res.statusCode}: ${res.statusMessage}`));
        return;
      }
      
      let data = '';
      
      res.on('data', (chunk) => {
        data += chunk;
      });
      
      res.on('end', () => {
        try {
          const jsonData = JSON.parse(data);
          resolve(jsonData);
        } catch (error) {
          reject(new Error(`–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: ${error.message}`));
        }
      });
    });
    
    req.on('error', (error) => {
      reject(new Error(`–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: ${error.message}`));
    });
    
    req.setTimeout(30000, () => {
      req.destroy();
      reject(new Error('–¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞ (30 —Å–µ–∫—É–Ω–¥)'));
    });
  });
}

async function saveData(data) {
  try {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–æ–ø–∏—é
    fs.writeFileSync(OUTPUT_FILE, JSON.stringify(data, null, 2));
    console.log(`‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: ${OUTPUT_FILE}`);
    
    // –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    fs.writeFileSync(BACKUP_FILE, JSON.stringify(data, null, 2));
    console.log(`üì¶ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: ${BACKUP_FILE}`);
    
    return true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error.message);
    return false;
  }
}

async function main() {
  try {
    // –°–∫–∞—á–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    console.log('üîÑ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...');
    const data = await downloadData();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
    console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∫–∞—á–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:');
    console.log(`   - –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: ${data.categories?.length || 0}`);
    console.log(`   - –¢–æ–≤–∞—Ä—ã: ${data.products?.length || 0}`);
    console.log(`   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: ${data.users?.length || 0}`);
    console.log(`   - –ó–∞–∫–∞–∑—ã: ${data.orders?.length || 0}`);
    console.log(`   - –í–æ–ø—Ä–æ—Å—ã: ${data.productQuestions?.length || 0}`);
    console.log(`   - –û—Ç–∑—ã–≤—ã: ${data.reviews?.length || 0}`);
    console.log(`   - –û—Ç–∑—ã–≤—ã –º–∞–≥–∞–∑–∏–Ω–∞: ${data.shopReviews?.length || 0}`);
    console.log(`   - –ò–∑–±—Ä–∞–Ω–Ω–æ–µ: ${data.wishlists?.length || 0}`);
    console.log(`   - –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: ${data.notifications?.length || 0}`);
    console.log(`   - –î–∞—Ç–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞: ${data.exportDate || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}`);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
    console.log('\nüíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...');
    const saved = await saveData(data);
    
    if (saved) {
      console.log('\nüéâ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω—ã –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!');
      console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
      console.log('1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ npm run restore-server –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö');
      console.log('2. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ª–æ–∫–∞–ª—å–Ω–æ');
    } else {
      console.log('\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö');
    }
    
  } catch (error) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error.message);
    console.log('\nüîó –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:');
    console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:', `${SERVER_URL}${API_ENDPOINT}`);
    console.log('2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ JSON –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –≤ —Ñ–∞–π–ª server-export.json');
    console.log('3. –ü–æ–º–µ—Å—Ç–∏—Ç–µ —Ñ–∞–π–ª –≤ –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞');
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
main(); 