#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Cloudinary URL –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ API
"""

import requests
import json

def check_cloudinary_urls():
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ API
        response = requests.get('http://localhost:5000/api/products?admin=true')
        products = response.json()
        
        print("üîç –ê–Ω–∞–ª–∏–∑ Cloudinary URL –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
        print("=" * 50)
        
        cloudinary_count = 0
        local_count = 0
        products_with_cloudinary = []
        
        for product in products:
            if 'imageUrls' in product and product['imageUrls']:
                for url in product['imageUrls']:
                    if url.startswith('http') and 'cloudinary.com' in url:
                        cloudinary_count += 1
                        products_with_cloudinary.append({
                            'id': product['id'],
                            'name': product['name'],
                            'url': url
                        })
                    elif url.startswith('/uploads/'):
                        local_count += 1
        
        print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   - Cloudinary URL: {cloudinary_count}")
        print(f"   - –õ–æ–∫–∞–ª—å–Ω—ã–µ –ø—É—Ç–∏: {local_count}")
        print(f"   - –¢–æ–≤–∞—Ä–æ–≤ —Å Cloudinary: {len(products_with_cloudinary)}")
        
        if products_with_cloudinary:
            print(f"\n‚òÅÔ∏è –¢–æ–≤–∞—Ä—ã —Å Cloudinary –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏:")
            for item in products_with_cloudinary:
                print(f"   - ID {item['id']}: {item['name']}")
                print(f"     URL: {item['url']}")
        
        return cloudinary_count, local_count
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return 0, 0

if __name__ == '__main__':
    check_cloudinary_urls()

